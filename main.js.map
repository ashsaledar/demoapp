{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/state/auth.actions.ts","./src/app/auth/state/auth.effects.ts","./src/app/auth/state/auth.reducer.ts","./src/app/auth/state/auth.selector.ts","./src/app/auth/state/auth.state.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/models/user.model.ts","./src/app/posts/single-post/single-post.component.ts","./src/app/posts/single-post/single-post.component.html","./src/app/posts/state/posts.selector.ts","./src/app/posts/state/posts.state.ts","./src/app/services/AuthToken.interceptor.ts","./src/app/services/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/loading-spinner/loading-spinner.component.ts","./src/app/shared/components/loading-spinner/loading-spinner.component.html","./src/app/store/Shared/shared.actions.ts","./src/app/store/Shared/shared.reducer.ts","./src/app/store/Shared/shared.selector.ts","./src/app/store/Shared/shared.state.ts","./src/app/store/app.state.ts","./src/app/store/router/custom-serializer.ts","./src/app/store/router/router.selector.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { SinglePostComponent } from './posts/single-post/single-post.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'posts',\n    loadChildren: () =>\n      import('./posts/posts.module').then((m) => m.PostsModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'posts/details/:id',\n    component: SinglePostComponent,\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { getLoading, getErrorMessage } from './store/Shared/shared.selector';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './store/app.state';\nimport { autoLogin } from './auth/state/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'store';\n  showLoading: Observable<boolean>;\n  errorMessage: Observable<string>;\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this.showLoading = this.store.select(getLoading);\n    this.errorMessage = this.store.select(getErrorMessage);\n    this.store.dispatch(autoLogin());\n  }\n}\n","<app-header></app-header>\n<app-loading-spinner *ngIf=\"showLoading | async\"></app-loading-spinner>\n<div class=\"container\">\n  <div class=\"row\">\n    <div>\n      <div class=\"alert alert-danger\" *ngIf=\"errorMessage | async as error\">\n        {{ error }}\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { CustomSerializer } from './store/router/custom-serializer';\nimport { AuthTokenInterceptor } from './services/AuthToken.interceptor';\nimport { AuthEffects } from './auth/state/auth.effects';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EffectsModule } from '@ngrx/effects';\nimport { appReducer } from './store/app.state';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { environment } from 'src/environments/environment';\nimport { LoadingSpinnerComponent } from './shared/components/loading-spinner/loading-spinner.component';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    LoadingSpinnerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    EffectsModule.forRoot([AuthEffects]),\n    StoreModule.forRoot(appReducer),\n    StoreDevtoolsModule.instrument({\n      logOnly: environment.production,\n    }),\n    StoreRouterConnectingModule.forRoot({\n      serializer: CustomSerializer,\n    }),\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthTokenInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { User } from './../../models/user.model';\nimport { createAction, props } from '@ngrx/store';\nexport const LOGIN_START = '[auth page] login start';\nexport const LOGIN_SUCCESS = '[auth page] login Success';\nexport const LOGIN_FAIL = '[auth page] login Fail';\n\nexport const SIGNUP_START = '[auth page] signup start';\nexport const SIGNUP_SUCCESS = '[auth page] signup success';\nexport const AUTO_LOGIN_ACTION = '[auth page] auto login';\nexport const LOGOUT_ACTION = '[auth page] logout';\n\nexport const loginStart = createAction(\n  LOGIN_START,\n  props<{ email: string; password: string }>()\n);\nexport const loginSuccess = createAction(\n  LOGIN_SUCCESS,\n  props<{ user: User; redirect: boolean }>()\n);\n\nexport const signupStart = createAction(\n  SIGNUP_START,\n  props<{ email: string; password: string }>()\n);\n\nexport const signupSuccess = createAction(\n  SIGNUP_SUCCESS,\n  props<{ user: User; redirect: boolean }>()\n);\n\nexport const autoLogin = createAction(AUTO_LOGIN_ACTION);\nexport const autoLogout = createAction(LOGOUT_ACTION);\nexport const dummyAction = createAction('[dummy action]');\n","import {\n  setLoadingSpinner,\n  setErrorMessage,\n} from './../../store/Shared/shared.actions';\nimport { AuthService } from './../../services/auth.service';\nimport { exhaustMap, map, catchError, tap, mergeMap } from 'rxjs/operators';\nimport {\n  autoLogin,\n  autoLogout,\n  loginStart,\n  loginSuccess,\n  signupStart,\n  signupSuccess,\n} from './auth.actions';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.state';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private store: Store<AppState>,\n    private router: Router\n  ) {}\n\n  login$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loginStart),\n      exhaustMap((action) => {\n        return this.authService.login(action.email, action.password).pipe(\n          map((data) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            this.store.dispatch(setErrorMessage({ message: '' }));\n            const user = this.authService.formatUser(data);\n           // this.authService.setUserInLocalStorage(user);\n            return loginSuccess({ user, redirect: true });\n          }),\n          catchError((errResp) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            const errorMessage = this.authService.getErrorMessage(\n              errResp.error.message\n            );\n            return of(setErrorMessage({ message: errorMessage }));\n          })\n        );\n      })\n    );\n  });\n\n  loginRedirect$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(...[loginSuccess, signupSuccess]),\n        tap((action) => {\n          this.store.dispatch(setErrorMessage({ message: '' }));\n          if (action.redirect) {\n            this.router.navigate(['/']);\n          }\n        })\n      );\n    },\n    { dispatch: false }\n  );\n\n  signUp$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(signupStart),\n      exhaustMap((action) => {\n        return this.authService.signUp(action.email, action.password).pipe(\n          map((data) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            const user = this.authService.formatUser(data);\n          //  this.authService.setUserInLocalStorage(user);\n            return signupSuccess({ user, redirect: true });\n          }),\n          catchError((errResp) => {\n            this.store.dispatch(setLoadingSpinner({ status: false }));\n            const errorMessage = this.authService.getErrorMessage(\n              errResp.error.error.status\n            );\n            return of(setErrorMessage({ message: errorMessage }));\n          })\n        );\n      })\n    );\n  });\n\n  autoLogin$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(autoLogin),\n      mergeMap((action) => {\n        const user = this.authService.getUserFromLocalStorage();\n        return of(loginSuccess({ user, redirect: false }));\n      })\n    );\n  });\n\n  logout$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(autoLogout),\n        map((action) => {\n          this.authService.logout();\n          this.router.navigate(['auth']);\n        })\n      );\n    },\n    { dispatch: false }\n  );\n}\n","import { loginSuccess, signupSuccess, autoLogout } from './auth.actions';\nimport { createReducer, on } from '@ngrx/store';\nimport { initialState } from './auth.state';\n\nconst _authReducer = createReducer(\n  initialState,\n  on(loginSuccess, (state, action) => {\n    return {\n      ...state,\n      user: action.user,\n    };\n  }),\n  on(signupSuccess, (state, action) => {\n    return {\n      ...state,\n      user: action.user,\n    };\n  }),\n  on(autoLogout, (state) => {\n    return {\n      ...state,\n      user: null,\n    };\n  })\n);\n\nexport function AuthReducer(state, action) {\n  return _authReducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { AuthState } from './auth.state';\nexport const AUTH_STATE_NAME = 'auth';\n\nconst getAuthState = createFeatureSelector<AuthState>(AUTH_STATE_NAME);\n\nexport const isAuthenticated = createSelector(getAuthState, (state) => {\n  return state.user ? true : false;\n});\n\nexport const getToken = createSelector(getAuthState, (state) => {\n  return state.user ? state.user.userToken : null;\n});\n","import { User } from './../../models/user.model';\nexport interface AuthState {\n  user: User | null;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","export class User {\n  constructor(\n    private email: string,\n    private token: string,\n    private localId: string,\n    private expirationDate: Date\n  ) {}\n\n  get expireDate() {\n    return this.expirationDate;\n  }\n\n  get userToken() {\n    return this.token;\n  }\n}\n","import { getPostById } from './../state/posts.selector';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './../../store/app.state';\nimport { Post } from './../../models/posts.model';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-single-post',\n  templateUrl: './single-post.component.html',\n  styleUrls: ['./single-post.component.css'],\n})\nexport class SinglePostComponent implements OnInit {\n  post: Observable<Post>;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.post = this.store.select(getPostById);\n  }\n}\n","<div>PostDetails</div>\n<div *ngIf=\"post | async as postData\">\n  <div>Id: {{ postData.id }}</div>\n  <div>Title: {{ postData.title }}</div>\n  <div>Description: {{ postData.description }}</div>\n</div>\n<div><a [routerLink]=\"['/posts']\">Back to posts</a></div>\n","import { RouterStateUrl } from './../../store/router/custom-serializer';\nimport { getCurrentRoute } from './../../store/router/router.selector';\nimport { postsAdapter, PostsState } from './posts.state';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { RouterState } from '@angular/router';\n\nexport const POST_STATE_NAME = 'posts';\nconst getPostsState = createFeatureSelector<PostsState>(POST_STATE_NAME);\nexport const postsSelectors = postsAdapter.getSelectors();\n\nexport const getPosts = createSelector(getPostsState, postsSelectors.selectAll);\nexport const getPostEntities = createSelector(\n  getPostsState,\n  postsSelectors.selectEntities\n);\n\nexport const getPostById = createSelector(\n  getPostEntities,\n  getCurrentRoute,\n  (posts, route: RouterStateUrl) => {\n    return posts ? posts[route.params['id']] : null;\n  }\n);\n\nexport const getCount = createSelector(getPostsState, (state) => state.count);\n","import { EntityState, createEntityAdapter } from '@ngrx/entity';\nimport { Post } from './../../models/posts.model';\n\nexport interface PostsState extends EntityState<Post> {\n  count: number;\n}\n\nexport const postsAdapter = createEntityAdapter<Post>({\n  sortComparer: sortByName,\n});\n\nexport const initialState: PostsState = postsAdapter.getInitialState({\n  count: 0,\n});\n\nexport function sortByName(a: Post, b: Post): number {\n  const compare = a.title.localeCompare(b.title);\n  if (compare > 0) {\n    return -1;\n  }\n\n  if (compare < 0) {\n    return 1;\n  }\n\n  return compare;\n}\n","import { exhaustMap, take } from 'rxjs/operators';\nimport { getToken } from './../auth/state/auth.selector';\nimport { AppState } from './../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport {\n  HttpInterceptor,\n  HttpEvent,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  constructor(private store: Store<AppState>) {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    \n    return this.store.select(getToken).pipe(\n      take(1),\n      exhaustMap((token) => {\n        if (!token) {\n          return next.handle(req);\n        }\n        let modifiedReq = req.clone({\n          params: req.params,\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n","import { exhaustMap, map } from 'rxjs/operators';\nimport { AppState } from './../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { isAuthenticated } from '../auth/state/auth.selector';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store<AppState>, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n    return this.store.select(isAuthenticated).pipe(\n      map((authenticate) => {\n        if (!authenticate) {\n         // alert('Please login or signup');\n          return this.router.createUrlTree(['auth']);\n        }\n        return true;\n      })\n    );\n  }\n}\n","import { User } from './../models/user.model';\nimport { Observable } from 'rxjs';\nimport { AuthResponseData } from './../models/AuthResponseData.model';\nimport { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AppState } from '../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { autoLogout } from '../auth/state/auth.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  timeoutInterval: any;\n  constructor(private http: HttpClient, private store: Store<AppState>) {}\n\n  login(email: string, password: string): Observable<AuthResponseData> {\n    return this.http.post<AuthResponseData>(\n      `http://localhost:8000/auth/login`,\n      { email, password }\n    );\n  }\n\n  signUp(email: string, password: string): Observable<AuthResponseData> {\n    return this.http.post<AuthResponseData>(\n      `http://localhost:8000/auth/register`,\n      { email, password }\n    );\n  }\n\n  formatUser(data: AuthResponseData) {\n    const expirationDate = new Date(\n      new Date().getTime() + +data.expiresIn * 1000\n    );\n    const user = new User(\n      data?.email,\n      data.access_token,\n      data?.localId,\n      expirationDate\n    );\n    return user;\n  }\n\n  getErrorMessage(data: any) {\n    switch (data) {\n      case 'Incorrect email or password':\n        return 'Email Not Found';\n      case 'Email and Password already exist':\n        return 'Email and Password already exists';\n      case 'Error in authorization format':\n        return 'please check link';\n      default:\n        return 'Unknown error occurred. Please try again';\n    }\n  }\n\n  setUserInLocalStorage(user: User) {\n    localStorage.setItem('userData', JSON.stringify(user));\n\n    this.runTimeoutInterval(user);\n  }\n\n  runTimeoutInterval(user: User) {\n    const todaysDate = new Date().getTime();\n    const expirationDate = user.expireDate.getTime();\n    const timeInterval = expirationDate - todaysDate;\n\n    this.timeoutInterval = setTimeout(() => {\n      this.store.dispatch(autoLogout());\n      //logout functionality or get the refresh token\n    }, timeInterval);\n  }\n\n  getUserFromLocalStorage() {\n    const userDataString = localStorage.getItem('userData');\n    if (userDataString) {\n      const userData = JSON.parse(userDataString);\n      const expirationDate = new Date(userData.expirationDate);\n      const user = new User(\n        userData.email,\n        userData.token,\n        userData.localId,\n        expirationDate\n      );\n      this.runTimeoutInterval(user);\n      return user;\n    }\n    return null;\n  }\n\n  logout() {\n    localStorage.removeItem('userData');\n    if (this.timeoutInterval) {\n      clearTimeout(this.timeoutInterval);\n      this.timeoutInterval = null;\n    }\n  }\n}\n","import { AuthService } from './../../../services/auth.service';\nimport { isAuthenticated } from './../../../auth/state/auth.selector';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit,ElementRef, Renderer2 } from '@angular/core';\nimport { AppState } from 'src/app/store/app.state';\nimport { Store } from '@ngrx/store';\nimport { autoLogout } from 'src/app/auth/state/auth.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  themeText = 'DARK';\n  isAuthenticated: Observable<boolean>;\n  constructor(private store: Store<AppState>, private el: ElementRef,\n    private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.renderer.setStyle(this.el.nativeElement.ownerDocument.body, 'backgroundColor', 'whitesmoke');\n    this.isAuthenticated = this.store.select(isAuthenticated);\n  }\n\n  onLogout(event: Event) {\n    event.preventDefault();\n    this.store.dispatch(autoLogout());\n  }\n\n  toggleTheme() {\n    // INCOMPLETE NEEDS IMPROVEMENTS\n    if (this.themeText === 'DARK') {\n      this.themeText = 'LIGHT';\n      this.renderer.setStyle(this.el.nativeElement.ownerDocument.body, 'backgroundColor', 'lightblue');\n      // this.renderer.setStyle(this.el.nativeElement.ownerDocument.body, 'color', 'white');\n\n      // this.renderer.setStyle(this.el.nativeElement, 'color', 'white');\n    } else {\n      this.themeText = 'DARK';\n      this.renderer.setStyle(this.el.nativeElement.ownerDocument.body, 'backgroundColor', 'whitesmoke');\n\n    }\n  }\n}\n","<header>\n  <div class=\"brand\">\n    <img src=\"/assets/images/logo.png\" alt=\"avatar\" />\n    <h5>The Store</h5>\n    \n  </div>\n \n  <div class=\"nav\">\n    \n   <ul>\n    <li>\n      <!-- <a id=\"mode\" class=\"active\" (click)=\"toggleTheme()\"\n        style=\"font-size: 16px;cursor: pointer;margin-left:50px;\">{{themeText}}</a> -->\n        <a id=\"mode\" [routerLink]=\" \" class=\"theme\" (click)=\"toggleTheme()\">\n          {{themeText}}\n        </a>\n    </li>\n        <li>\n          <a \n            [routerLink]=\"['/']\"\n            >Home</a\n          >\n        </li>\n        <li >\n          <a href=\"#\" [routerLink]=\"['/posts']\">Posts</a>\n        </li>\n        <li  *ngIf=\"!(isAuthenticated | async)\">\n          <a  href=\"#\" [routerLink]=\"['/auth']\">Login</a>\n        </li>\n        <li  *ngIf=\"!(isAuthenticated | async)\">\n          <a  href=\"#\" [routerLink]=\"['/auth/signup']\"\n            >Signup</a\n          >\n        </li>\n        <li  *ngIf=\"isAuthenticated | async\">\n          <a  href=\"#\" (click)=\"onLogout($event)\">Logout</a>\n        </li>\n    </ul>\n  </div>\n</header>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"backdrop\"></div>\n<div class=\"loading-spinner\">\n  <div class=\"lds-roller\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n  <div>Loading Data</div>\n</div>\n","import { createAction, props } from '@ngrx/store';\nexport const SET_LOADING_ACTION = '[shared state] set loading spinner';\nexport const SET_ERROR_MESSAGE = '[shared state] set error message';\n\nexport const setLoadingSpinner = createAction(\n  SET_LOADING_ACTION,\n  props<{ status: boolean }>()\n);\n\nexport const setErrorMessage = createAction(\n  SET_ERROR_MESSAGE,\n  props<{ message: string }>()\n);\n","import { setLoadingSpinner, setErrorMessage } from './shared.actions';\nimport { createReducer, on } from '@ngrx/store';\nimport { initialState } from './shared.state';\n\nconst _sharedReducer = createReducer(\n  initialState,\n  on(setLoadingSpinner, (state, action) => {\n    return {\n      ...state,\n      showLoading: action.status,\n    };\n  }),\n  on(setErrorMessage, (state, action) => {\n    return {\n      ...state,\n      errorMessage: action.message,\n    };\n  })\n);\n\nexport function SharedReducer(state, action) {\n  return _sharedReducer(state, action);\n}\n","import { SharedState } from './shared.state';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nexport const SHARED_STATE_NAME = 'shared';\n\nconst getSharedState = createFeatureSelector<SharedState>(SHARED_STATE_NAME);\n\nexport const getLoading = createSelector(getSharedState, (state) => {\n  return state.showLoading;\n});\n\nexport const getErrorMessage = createSelector(getSharedState, (state) => {\n  return state.errorMessage;\n});\n","export interface SharedState {\n  showLoading: boolean;\n  errorMessage: string;\n}\n\nexport const initialState: SharedState = {\n  showLoading: false,\n  errorMessage: '',\n};\n","import { AUTH_STATE_NAME } from './../auth/state/auth.selector';\nimport { SharedState } from './Shared/shared.state';\nimport { SHARED_STATE_NAME } from './Shared/shared.selector';\nimport { SharedReducer } from './Shared/shared.reducer';\nimport { AuthReducer } from './../auth/state/auth.reducer';\nimport { AuthState } from '../auth/state/auth.state';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nexport interface AppState {\n  [SHARED_STATE_NAME]: SharedState;\n  [AUTH_STATE_NAME]: AuthState;\n  router: RouterReducerState;\n}\n\nexport const appReducer = {\n  [SHARED_STATE_NAME]: SharedReducer,\n  [AUTH_STATE_NAME]: AuthReducer,\n  router: routerReducer,\n};\n","import { RouterStateSerializer } from '@ngrx/router-store';\nimport { Params, RouterStateSnapshot } from '@angular/router';\n\nexport interface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {\n      url,\n      root: { queryParams },\n    } = routerState;\n    const { params } = route;\n\n    // Only return an object including the URL, params and query params\n    // instead of the entire snapshot\n    return { url, params, queryParams };\n  }\n}\n","import { RouterStateUrl } from './custom-serializer';\nimport { RouterReducerState } from '@ngrx/router-store';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nexport const getRouterState = createFeatureSelector<\n  RouterReducerState<RouterStateUrl>\n>('router');\n\nexport const getCurrentRoute = createSelector(getRouterState, (router) => {\n  return router.state;\n});\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  FIRBASE_API_KEY: 'AIzaSyA9HEOZrRHZP026VQObeDz2PVD_GLpMV50',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}